// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    //same concepts of RAM64, split address on RAM with 9 bit address entry
	DMux8Way (in=load, sel=address[6..8], a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
	RAM64 (in=in, load=load1, address=address[0..5], out=part1);
	RAM64 (in=in, load=load2, address=address[0..5], out=part2);
	RAM64 (in=in, load=load3, address=address[0..5], out=part3);
	RAM64 (in=in, load=load4, address=address[0..5], out=part4);
	RAM64 (in=in, load=load5, address=address[0..5], out=part5);
	RAM64 (in=in, load=load6, address=address[0..5], out=part6);
	RAM64 (in=in, load=load7, address=address[0..5], out=part7);
	RAM64 (in=in, load=load8, address=address[0..5], out=part8);
	Mux8Way16 (a=part1, b=part2, c=part3, d=part4, e=part5, f=part6, g=part7, h=part8, sel=address[6..8], out=out);
}
